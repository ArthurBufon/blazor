@page "/"
@inject ProductService ProductService

<div class="container mt-4">
    <div class="row mb-4">
        <div class="col-md-6">
            <h2>Cat√°logo de Produtos</h2>
        </div>
        <div class="col-md-6">
            <input type="text" 
                   class="form-control" 
                   placeholder="Pesquisar produtos..."
                   @bind="searchTerm"
                   @bind:event="oninput" />
        </div>
    </div>

    @if (isLoading)
    {
        <div class="text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Carregando...</span>
            </div>
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var product in displayedProducts)
            {
                <div class="col">
                    <div class="card h-100">
                        <img src="@product.Imagem" 
                             class="card-img-top" 
                             alt="@product.Descricao"
                             style="height: 200px; object-fit: cover;">
                        
                        <div class="card-body">
                            <h5 class="card-title">@product.Descricao</h5>
                            <p class="card-text text-muted small">Ref: @product.Referencia</p>
                            <p class="card-text text-success fw-bold">
                                @product.Valor.ToString("C2")
                            </p>
                        </div>
                    </div>
                </div>
            }
        </div>

        @if (!displayedProducts.Any())
        {
            <div class="alert alert-warning mt-4">
                Nenhum produto encontrado para a pesquisa "@searchTerm"
            </div>
        }
    }
</div>

@code {
    private List<Produto> displayedProducts = new();
    private string searchTerm = string.Empty;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadProducts();
        isLoading = false;
    }

    private async Task LoadProducts()
    {
        displayedProducts = ProductService.BuscarProdutosEmDestaque();
        await InvokeAsync(StateHasChanged);
    }

    private async Task FilterProducts()
    {
        if (string.IsNullOrWhiteSpace(searchTerm))
        {
            displayedProducts = ProductService.BuscarProdutosEmDestaque();
        }
        else
        {
            displayedProducts = ProductService.SearchProducts(searchTerm);
        }
        await InvokeAsync(StateHasChanged);
    }
}