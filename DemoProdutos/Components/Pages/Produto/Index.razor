@page "/produtos"
@using DemoProdutos.Models

<h3 class="mb-4">Listagem de Produtos</h3>

<div class="mb-3">
    <input type="text" class="form-control" placeholder="Buscar por descrição ou categoria..." @bind-value="termoBusca"
        @bind-value:event="oninput" />
</div>

<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead class="table-dark">
            <tr>
                <th style="width: 100px">Foto</th>
                <th>Descrição</th>
                <th>Valor</th>
                <th>Peso</th>
                <th>Categoria</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var produto in produtosFiltrados)
            {
                <tr>
                    <td>
                        <img src="@produto.FotoUrl" alt="@produto.Descricao" class="img-thumbnail" />
                    </td>
                    <td>@produto.Descricao</td>
                    <td>@produto.Valor.ToString("C2")</td>
                    <td>@produto.Peso.ToString("N2") kg</td>
                    <td>@produto.Categoria</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    private List<Produto> produtos = new();
    private string termoBusca = string.Empty;
    private IEnumerable<Produto> produtosFiltrados = new List<Produto>();

    protected override void OnInitialized()
    {
        produtos = ProductService.GerarProdutosDummy(20);
        produtosFiltrados = produtos;
    }
    private void HandleInput()
    {
        AplicarFiltro();
    }

    private void AplicarFiltro()
    {
        Console.WriteLine(termoBusca);
        
        produtosFiltrados = string.IsNullOrWhiteSpace(termoBusca)
        ? produtos
        : produtos.Where(p =>
        p.Descricao.Contains(termoBusca, StringComparison.OrdinalIgnoreCase) ||
        p.Categoria.Contains(termoBusca, StringComparison.OrdinalIgnoreCase));
    }
}